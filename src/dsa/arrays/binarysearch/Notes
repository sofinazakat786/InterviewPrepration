Binary Search notes and code
//Binary Search is a search algorithm that finds the position of a target value within a sorted array.
//Binary Search is a fast search algorithm with run-time complexity of O(log n).
//This search algorithm works on the principle of divide and conquer.
//For this algorithm to work properly, the data collection should be in the sorted form.
// Logic:
// 1. Compare x with the middle element.
// 2. If x matches with the middle element, we return the mid index.
// 3. Else If x is greater than the mid element, then x can only lie in the right (greater) half subarray after the mid element. So we recur for the right half.
// 4. Else (x is smaller) recur for the left half.
// 5. If the element is not present in the array, return -1.
 sample:
    Input: arr[] = {2, 3, 4, 10, 40}, x = 10
    Itertion 1: l=0, r=4, mid=2, arr[mid]=4, arr[mid]<x, l=mid+1=3
    Itertion 2: l=3, r=4, mid=3, arr[mid]=10, arr[mid]=x, return mid=3
    Output: 3
